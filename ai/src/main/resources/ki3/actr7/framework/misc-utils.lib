#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|T|) |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|ACT-R-RANDOM|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|NIL| |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|CURRENT-MODEL|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|NIL| |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|CURRENT-MP-FCT|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|NIL| |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|MP-MODELS|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|T|) |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|GET-MODULE-FCT|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|WHILE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|WHILE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|WHILE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|TEST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|WHILE|
       `(|COMMON-LISP|::|DO| |COMMON-LISP|::|NIL|
         ((|COMMON-LISP|::|NOT| ,|COMMON-LISP-USER|::|TEST|))
         ,@|COMMON-LISP-USER|::|BODY|))))))
  '(|COMMON-LISP-USER|::|TEST| |COMMON-LISP|::|&BODY|
    |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|AIF|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|AIF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|AIF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|TEST-FORM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|THEN-FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|ELSE-FORM| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|AIF|
       `(|COMMON-LISP|::|LET|
         ((|COMMON-LISP-USER|::|IT| ,|COMMON-LISP-USER|::|TEST-FORM|))
         (|COMMON-LISP|::|IF| |COMMON-LISP-USER|::|IT|
          ,|COMMON-LISP-USER|::|THEN-FORM|
          ,|COMMON-LISP-USER|::|ELSE-FORM|)))))))
  '(|COMMON-LISP-USER|::|TEST-FORM| |COMMON-LISP-USER|::|THEN-FORM|
    |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP-USER|::|ELSE-FORM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|AWHEN|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|AWHEN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|AWHEN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|TEST-FORM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|AWHEN|
       `(|COMMON-LISP-USER|::|AIF| ,|COMMON-LISP-USER|::|TEST-FORM|
         (|COMMON-LISP|::|PROGN| ,@|COMMON-LISP-USER|::|BODY|)))))))
  '(|COMMON-LISP-USER|::|TEST-FORM| |COMMON-LISP|::|&BODY|
    |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|ACT-R_NCONCF|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|ACT-R_NCONCF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|ACT-R_NCONCF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|ENV|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|PLACE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ACT-R_NCONCF|
       |COMMON-LISP|::|NIL|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|TEMPS| |SYSTEM|::|SUBFORMS| |SYSTEM|::|STORES|
         |SYSTEM|::|SETTERFORM| |SYSTEM|::|GETTERFORM|)
        (|EXT|::|GET-SETF-METHOD| |SYSTEM|::|PLACE| |SYSTEM|::|ENV|)
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|LET-LIST|
           (|COMMON-LISP|::|MAPCAR| #'|COMMON-LISP|::|LIST| |SYSTEM|::|TEMPS|
            |SYSTEM|::|SUBFORMS|)))
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|AND|
           (|COMMON-LISP|::|EVERY| #'|COMMON-LISP|::|CONSTANTP|
            |COMMON-LISP-USER|::|ARGS|))
          (|COMMON-LISP|::|LET|
           ((|SYSTEM|::|FUNCTION-APPLICATION|
             (|COMMON-LISP|::|LIST*| '|COMMON-LISP|::|NCONC|
              |SYSTEM|::|GETTERFORM| |COMMON-LISP-USER|::|ARGS|)))
           (|SYSTEM|::|OPTIMIZED-WRAP-LET*| |SYSTEM|::|ENV|
            (|COMMON-LISP|::|NCONC| |SYSTEM|::|LET-LIST|
             (|COMMON-LISP|::|LIST|
              (|COMMON-LISP|::|LIST| (|COMMON-LISP|::|CAR| |SYSTEM|::|STORES|)
               |SYSTEM|::|FUNCTION-APPLICATION|)))
            |SYSTEM|::|SETTERFORM|))
          (|COMMON-LISP|::|LET*|
           ((|SYSTEM|::|ARGVARS|
             (|COMMON-LISP|::|MAPCAR|
              #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|VAR|)
                 (|COMMON-LISP|::|DECLARE|
                  (|COMMON-LISP|::|IGNORE| |SYSTEM|::|VAR|))
                 (|COMMON-LISP|::|GENSYM|))
              (|COMMON-LISP|::|LIST*| |COMMON-LISP-USER|::|ARGS|)))
            (|SYSTEM|::|FUNCTION-APPLICATION|
             (|COMMON-LISP|::|LIST*| '|COMMON-LISP|::|NCONC|
              |SYSTEM|::|GETTERFORM| |SYSTEM|::|ARGVARS|)))
           (|SYSTEM|::|OPTIMIZED-WRAP-LET*| |SYSTEM|::|ENV|
            (|COMMON-LISP|::|NCONC| |SYSTEM|::|LET-LIST|
             (|COMMON-LISP|::|MAPCAR| #'|COMMON-LISP|::|LIST|
              |SYSTEM|::|ARGVARS|
              (|COMMON-LISP|::|LIST*| |COMMON-LISP-USER|::|ARGS|))
             (|COMMON-LISP|::|LIST|
              (|COMMON-LISP|::|LIST| (|COMMON-LISP|::|CAR| |SYSTEM|::|STORES|)
               |SYSTEM|::|FUNCTION-APPLICATION|)))
            |SYSTEM|::|SETTERFORM|))))))))))
  '(|SYSTEM|::|PLACE| |COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|ARGS|
    |COMMON-LISP|::|&ENVIRONMENT| |SYSTEM|::|ENV|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PUSH-LAST|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PUSH-LAST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PUSH-LAST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|ITEM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|PLACE| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PUSH-LAST|
       `(|COMMON-LISP-USER|::|ACT-R_NCONCF| ,|COMMON-LISP-USER|::|PLACE|
         (|COMMON-LISP|::|LIST| ,|COMMON-LISP-USER|::|ITEM|)))))))
  '(|COMMON-LISP-USER|::|ITEM| |COMMON-LISP-USER|::|PLACE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|EXPT-COERCED|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|EXPT-COERCED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|EXPT-COERCED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Computes expt and coerce to *read-default-float-format* if needed"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|BASE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|POWER| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|EXPT-COERCED|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|TYPEP| (|COMMON-LISP|::|EXPT| 1.0f0 1.0f0)
         |COMMON-LISP|::|*READ-DEFAULT-FLOAT-FORMAT*|)
        `(|COMMON-LISP|::|EXPT| ,|COMMON-LISP-USER|::|BASE|
          ,|COMMON-LISP-USER|::|POWER|)
        `(|COMMON-LISP|::|COERCE|
          (|COMMON-LISP|::|EXPT| ,|COMMON-LISP-USER|::|BASE|
           ,|COMMON-LISP-USER|::|POWER|)
          ,|COMMON-LISP|::|*READ-DEFAULT-FLOAT-FORMAT*|)))))))
  '(|COMMON-LISP-USER|::|BASE| |COMMON-LISP-USER|::|POWER|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|EXP-COERCED|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|EXP-COERCED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|EXP-COERCED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Computes expt and coerce to *read-default-float-format* if needed"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|ARG|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|EXP-COERCED|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|TYPEP| (|COMMON-LISP|::|EXPT| 1.0f0 1.0f0)
         |COMMON-LISP|::|*READ-DEFAULT-FLOAT-FORMAT*|)
        `(|COMMON-LISP|::|EXP| ,|COMMON-LISP-USER|::|ARG|)
        `(|COMMON-LISP|::|COERCE|
          (|COMMON-LISP|::|EXP| ,|COMMON-LISP-USER|::|ARG|)
          ,|COMMON-LISP|::|*READ-DEFAULT-FLOAT-FORMAT*|)))))))
  '(|COMMON-LISP-USER|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|LOG-COERCED|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|LOG-COERCED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|LOG-COERCED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Computes log and coerce to *read-default-float-format* if needed\n
   doesn't accept a base however"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|ARG|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|BASE|
        (|COMMON-LISP|::|IF| #2=(|COMMON-LISP|::|CDDR| . #1#)
         (|COMMON-LISP|::|CADDR| . #1#) |COMMON-LISP|::|NIL|))
       (|COMMON-LISP-USER|::|BASEP|
        (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|NULL| #2#))))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|LOG-COERCED|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|TYPEP| (|COMMON-LISP|::|LOG| 1.0f0)
         |COMMON-LISP|::|*READ-DEFAULT-FLOAT-FORMAT*|)
        (|COMMON-LISP|::|IF| |COMMON-LISP-USER|::|BASEP|
         `(|COMMON-LISP|::|LOG| ,|COMMON-LISP-USER|::|ARG|
           ,|COMMON-LISP-USER|::|BASE|)
         `(|COMMON-LISP|::|LOG| ,|COMMON-LISP-USER|::|ARG|))
        (|COMMON-LISP|::|IF| |COMMON-LISP-USER|::|BASEP|
         `(|COMMON-LISP|::|COERCE|
           (|COMMON-LISP|::|LOG| ,|COMMON-LISP-USER|::|ARG|
            ,|COMMON-LISP-USER|::|BASE|)
           ,|COMMON-LISP|::|*READ-DEFAULT-FLOAT-FORMAT*|)
         `(|COMMON-LISP|::|COERCE|
           (|COMMON-LISP|::|LOG| ,|COMMON-LISP-USER|::|ARG|)
           ,|COMMON-LISP|::|*READ-DEFAULT-FLOAT-FORMAT*|))))))))
  '(|COMMON-LISP-USER|::|ARG| |COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP-USER|::|BASE| |COMMON-LISP|::|NIL|
     |COMMON-LISP-USER|::|BASEP|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|SQRT-COERCED|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|SQRT-COERCED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|SQRT-COERCED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Computes sqrt and coerce to *read-default-float-format* if needed"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|ARG|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|SQRT-COERCED|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|TYPEP| (|COMMON-LISP|::|SQRT| 2.0f0)
         |COMMON-LISP|::|*READ-DEFAULT-FLOAT-FORMAT*|)
        `(|COMMON-LISP|::|SQRT| ,|COMMON-LISP-USER|::|ARG|)
        `(|COMMON-LISP|::|COERCE|
          (|COMMON-LISP|::|SQRT| ,|COMMON-LISP-USER|::|ARG|)
          ,|COMMON-LISP|::|*READ-DEFAULT-FLOAT-FORMAT*|)))))))
  '(|COMMON-LISP-USER|::|ARG|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PRINT-WARNING|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PRINT-WARNING|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PRINT-WARNING|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Outputs a warning of message and arguments."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|MESSAGE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ARGUMENTS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PRINT-WARNING|
       `(|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|*ERROR-OUTPUT*|
         "~&#|Warning~:[~*~;~@[ (in model ~a)~]~]: ~@? |#~%"
         (|COMMON-LISP|::|AND| (|COMMON-LISP-USER|::|CURRENT-MP-FCT|)
          (|COMMON-LISP|::|>|
           (|COMMON-LISP|::|LENGTH| (|COMMON-LISP-USER|::|MP-MODELS|)) 1.))
         (|COMMON-LISP-USER|::|CURRENT-MODEL|) ,|COMMON-LISP-USER|::|MESSAGE|
         ,@|COMMON-LISP-USER|::|ARGUMENTS|))))))
  '(|COMMON-LISP-USER|::|MESSAGE| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ARGUMENTS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|HASH-TABLE-KEYS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|HT|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MS-ROUND|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SECONDS->MS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MS->SECONDS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FCTORNIL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|TORNIL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|POSNUM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|NONNEG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|NUMORNIL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|POSNUMORNIL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|NONNEGORNIL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|NUMORBOOL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|POSNUMORBOOL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SAFE>|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAL1| |COMMON-LISP-USER|::|VAL2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SAFE>=|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAL1| |COMMON-LISP-USER|::|VAL2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SAFE<|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAL1| |COMMON-LISP-USER|::|VAL2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SAFE<=|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAL1| |COMMON-LISP-USER|::|VAL2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SPLICE-INTO-LIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|LIS| |COMMON-LISP|::|POSITION|
    |COMMON-LISP-USER|::|ITEM|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SPLICE-INTO-LIST-DES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|LIS| |COMMON-LISP|::|POSITION|
    |COMMON-LISP-USER|::|ITEM|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SPLICE-INTO-POSITION-DES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|LIS| |COMMON-LISP|::|POSITION|
    |COMMON-LISP-USER|::|ITEM|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MKLIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|OBJ|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|MODEL-OUTPUT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MODEL-OUTPUT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MODEL-OUTPUT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CONTROL-STRING|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MODEL-OUTPUT|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|MODULE| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP-USER|::|PRESENT| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
          (,|COMMON-LISP-USER|::|MODULE| ,|COMMON-LISP-USER|::|PRESENT|)
          (|COMMON-LISP-USER|::|GET-MODULE-FCT|
           '|COMMON-LISP-USER|::|PRINTING-MODULE|)
          (|COMMON-LISP|::|WHEN|
           (|COMMON-LISP|::|AND| ,|COMMON-LISP-USER|::|PRESENT|
            (|COMMON-LISP-USER|::|ACT-R-OUTPUT-STREAM|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
              ,|COMMON-LISP-USER|::|MODULE|)))
           (|COMMON-LISP|::|FORMAT|
            (|COMMON-LISP-USER|::|ACT-R-OUTPUT-STREAM|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
              ,|COMMON-LISP-USER|::|MODULE|))
            "~&~@?~%" ,|COMMON-LISP-USER|::|CONTROL-STRING|
            ,@|COMMON-LISP-USER|::|ARGS|)))))))))
  '(|COMMON-LISP-USER|::|CONTROL-STRING| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|COMMAND-OUTPUT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|COMMAND-OUTPUT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|COMMAND-OUTPUT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CONTROL-STRING|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|COMMAND-OUTPUT|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|MODULE| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP-USER|::|PRESENT| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
          (,|COMMON-LISP-USER|::|MODULE| ,|COMMON-LISP-USER|::|PRESENT|)
          (|COMMON-LISP-USER|::|GET-MODULE-FCT|
           '|COMMON-LISP-USER|::|PRINTING-MODULE|)
          (|COMMON-LISP|::|WHEN|
           (|COMMON-LISP|::|AND| ,|COMMON-LISP-USER|::|PRESENT|
            (|COMMON-LISP|::|NOT|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-SUPPRESS-CMDS|
              ,|COMMON-LISP-USER|::|MODULE|))
            (|COMMON-LISP-USER|::|ACT-R-OUTPUT-STREAM|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-C|
              ,|COMMON-LISP-USER|::|MODULE|)))
           (|COMMON-LISP|::|FORMAT|
            (|COMMON-LISP-USER|::|ACT-R-OUTPUT-STREAM|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-C|
              ,|COMMON-LISP-USER|::|MODULE|))
            "~&~@?~%" ,|COMMON-LISP-USER|::|CONTROL-STRING|
            ,@|COMMON-LISP-USER|::|ARGS|)))))))))
  '(|COMMON-LISP-USER|::|CONTROL-STRING| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NO-OUTPUT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NO-OUTPUT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NO-OUTPUT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Suppress command output while evaluating ACT-R commands"
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|COMMANDS|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NO-OUTPUT|
      (|COMMON-LISP|::|LET|
       ((|COMMON-LISP-USER|::|MODULE| (|COMMON-LISP|::|GENSYM|))
        (|COMMON-LISP-USER|::|PRESENT| (|COMMON-LISP|::|GENSYM|))
        (|COMMON-LISP-USER|::|CURRENT| (|COMMON-LISP|::|GENSYM|)))
       `(|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
         (,|COMMON-LISP-USER|::|MODULE| ,|COMMON-LISP-USER|::|PRESENT|)
         (|COMMON-LISP-USER|::|GET-MODULE-FCT|
          '|COMMON-LISP-USER|::|PRINTING-MODULE|)
         (|COMMON-LISP|::|WHEN| ,|COMMON-LISP-USER|::|PRESENT|
          (|COMMON-LISP|::|LET|
           ((,|COMMON-LISP-USER|::|CURRENT|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-SUPPRESS-CMDS|
              ,|COMMON-LISP-USER|::|MODULE|)))
           (|COMMON-LISP|::|SETF|
            (|COMMON-LISP-USER|::|PRINTING-MODULE-SUPPRESS-CMDS|
             ,|COMMON-LISP-USER|::|MODULE|)
            |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|UNWIND-PROTECT|
            (|COMMON-LISP|::|PROGN| ,@|COMMON-LISP-USER|::|COMMANDS|)
            (|COMMON-LISP|::|SETF|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-SUPPRESS-CMDS|
              ,|COMMON-LISP-USER|::|MODULE|)
             ,|COMMON-LISP-USER|::|CURRENT|))))))))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|COMMANDS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|SUPPRESS-WARNINGS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|SUPPRESS-WARNINGS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|SUPPRESS-WARNINGS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Suppress all ACT-R warnings while evaluating ACT-R commands"
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|COMMANDS|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|SUPPRESS-WARNINGS|
      (|COMMON-LISP|::|LET|
       ((|COMMON-LISP-USER|::|MODULE| (|COMMON-LISP|::|GENSYM|))
        (|COMMON-LISP-USER|::|PRESENT| (|COMMON-LISP|::|GENSYM|))
        (|COMMON-LISP-USER|::|CURRENT| (|COMMON-LISP|::|GENSYM|)))
       `(|COMMON-LISP|::|IF| (|COMMON-LISP-USER|::|CURRENT-MODEL|)
         (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
          (,|COMMON-LISP-USER|::|MODULE| ,|COMMON-LISP-USER|::|PRESENT|)
          (|COMMON-LISP-USER|::|GET-MODULE-FCT|
           '|COMMON-LISP-USER|::|PRINTING-MODULE|)
          (|COMMON-LISP|::|WHEN| ,|COMMON-LISP-USER|::|PRESENT|
           (|COMMON-LISP|::|LET|
            ((|COMMON-LISP|::|*ERROR-OUTPUT*|
              (|COMMON-LISP|::|MAKE-BROADCAST-STREAM|))
             (,|COMMON-LISP-USER|::|CURRENT|
              (|COMMON-LISP-USER|::|PRINTING-MODULE-MODEL-WARNINGS|
               ,|COMMON-LISP-USER|::|MODULE|)))
            (|COMMON-LISP|::|SETF|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-MODEL-WARNINGS|
              ,|COMMON-LISP-USER|::|MODULE|)
             |COMMON-LISP|::|NIL|)
            (|COMMON-LISP|::|UNWIND-PROTECT|
             (|COMMON-LISP|::|PROGN| ,@|COMMON-LISP-USER|::|COMMANDS|)
             (|COMMON-LISP|::|SETF|
              (|COMMON-LISP-USER|::|PRINTING-MODULE-MODEL-WARNINGS|
               ,|COMMON-LISP-USER|::|MODULE|)
              ,|COMMON-LISP-USER|::|CURRENT|)))))
         (|COMMON-LISP|::|LET|
          ((|COMMON-LISP|::|*ERROR-OUTPUT*|
            (|COMMON-LISP|::|MAKE-BROADCAST-STREAM|)))
          ,@|COMMON-LISP-USER|::|COMMANDS|)))))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|COMMANDS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|CAPTURE-MODEL-OUTPUT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CAPTURE-MODEL-OUTPUT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CAPTURE-MODEL-OUTPUT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Return the string of all model output from commands"
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|COMMANDS|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CAPTURE-MODEL-OUTPUT|
      (|COMMON-LISP|::|LET|
       ((|COMMON-LISP-USER|::|MODULE| (|COMMON-LISP|::|GENSYM|))
        (|COMMON-LISP-USER|::|PRESENT| (|COMMON-LISP|::|GENSYM|))
        (|COMMON-LISP-USER|::|CURRENT-V| (|COMMON-LISP|::|GENSYM|))
        (|COMMON-LISP-USER|::|CURRENT-C| (|COMMON-LISP|::|GENSYM|))
        (|COMMON-LISP-USER|::|OUT-STREAM| (|COMMON-LISP|::|GENSYM|)))
       `(|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
         (,|COMMON-LISP-USER|::|MODULE| ,|COMMON-LISP-USER|::|PRESENT|)
         (|COMMON-LISP-USER|::|GET-MODULE-FCT|
          '|COMMON-LISP-USER|::|PRINTING-MODULE|)
         (|COMMON-LISP|::|WHEN| ,|COMMON-LISP-USER|::|PRESENT|
          (|COMMON-LISP|::|LET|
           ((,|COMMON-LISP-USER|::|OUT-STREAM|
             (|COMMON-LISP|::|MAKE-STRING-OUTPUT-STREAM|))
            (,|COMMON-LISP-USER|::|CURRENT-V|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
              ,|COMMON-LISP-USER|::|MODULE|))
            (,|COMMON-LISP-USER|::|CURRENT-C|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-C|
              ,|COMMON-LISP-USER|::|MODULE|)))
           (|COMMON-LISP|::|SETF|
            (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
             ,|COMMON-LISP-USER|::|MODULE|)
            (|COMMON-LISP-USER|::|MAKE-ACT-R-OUTPUT| :|STREAM|
             ,|COMMON-LISP-USER|::|OUT-STREAM|))
           (|COMMON-LISP|::|SETF|
            (|COMMON-LISP-USER|::|PRINTING-MODULE-C|
             ,|COMMON-LISP-USER|::|MODULE|)
            (|COMMON-LISP-USER|::|MAKE-ACT-R-OUTPUT| :|STREAM|
             ,|COMMON-LISP-USER|::|OUT-STREAM|))
           (|COMMON-LISP|::|UNWIND-PROTECT|
            (|COMMON-LISP|::|PROGN| ,@|COMMON-LISP-USER|::|COMMANDS|)
            (|COMMON-LISP|::|PROGN|
             (|COMMON-LISP|::|SETF|
              (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
               ,|COMMON-LISP-USER|::|MODULE|)
              ,|COMMON-LISP-USER|::|CURRENT-V|)
             (|COMMON-LISP|::|SETF|
              (|COMMON-LISP-USER|::|PRINTING-MODULE-C|
               ,|COMMON-LISP-USER|::|MODULE|)
              ,|COMMON-LISP-USER|::|CURRENT-C|)))
           (|COMMON-LISP|::|PROG1|
            (|COMMON-LISP|::|GET-OUTPUT-STREAM-STRING|
             ,|COMMON-LISP-USER|::|OUT-STREAM|)
            (|COMMON-LISP|::|CLOSE| ,|COMMON-LISP-USER|::|OUT-STREAM|))))))))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|COMMANDS|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*ONE-STREAM-HACK*|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|MODEL-WARNING|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MODEL-WARNING|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MODEL-WARNING|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CONTROL-STRING|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MODEL-WARNING|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|MODULE| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP-USER|::|PRESENT| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP|::|STREAM| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
          (,|COMMON-LISP-USER|::|MODULE| ,|COMMON-LISP-USER|::|PRESENT|)
          (|COMMON-LISP-USER|::|GET-MODULE-FCT|
           '|COMMON-LISP-USER|::|PRINTING-MODULE|)
          (|COMMON-LISP|::|WHEN|
           (|COMMON-LISP|::|AND| ,|COMMON-LISP-USER|::|PRESENT|
            (|COMMON-LISP-USER|::|ACT-R-OUTPUT-STREAM|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
              ,|COMMON-LISP-USER|::|MODULE|)))
           (|COMMON-LISP|::|LET|
            ((,|COMMON-LISP|::|STREAM|
              (|COMMON-LISP-USER|::|ACT-R-OUTPUT-STREAM|
               (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
                ,|COMMON-LISP-USER|::|MODULE|))))
            (|COMMON-LISP|::|COND|
             ((|COMMON-LISP|::|NULL|
               (|COMMON-LISP-USER|::|PRINTING-MODULE-MODEL-WARNINGS|
                ,|COMMON-LISP-USER|::|MODULE|))
              |COMMON-LISP|::|NIL|)
             ((|COMMON-LISP|::|OR|
               (|COMMON-LISP|::|NULL| ,|COMMON-LISP|::|STREAM|)
               (|COMMON-LISP|::|EQ| ,|COMMON-LISP|::|STREAM|
                |COMMON-LISP|::|*ERROR-OUTPUT*|)
               |COMMON-LISP-USER|::|*ONE-STREAM-HACK*|
               (|COMMON-LISP|::|AND|
                (|COMMON-LISP|::|EQ| ,|COMMON-LISP|::|STREAM|
                 |COMMON-LISP|::|T|)
                (|COMMON-LISP|::|EQL| |COMMON-LISP|::|*ERROR-OUTPUT*|
                 |COMMON-LISP|::|*STANDARD-OUTPUT*|)))
              (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|*ERROR-OUTPUT*|
               "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%"
               (|COMMON-LISP|::|>|
                (|COMMON-LISP|::|LENGTH| (|COMMON-LISP-USER|::|MP-MODELS|)) 1.)
               (|COMMON-LISP-USER|::|CURRENT-MODEL|)
               ,|COMMON-LISP-USER|::|CONTROL-STRING|
               ,@|COMMON-LISP-USER|::|ARGS|))
             (|COMMON-LISP|::|T|
              (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|*ERROR-OUTPUT*|
               "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%"
               (|COMMON-LISP|::|>|
                (|COMMON-LISP|::|LENGTH| (|COMMON-LISP-USER|::|MP-MODELS|)) 1.)
               (|COMMON-LISP-USER|::|CURRENT-MODEL|)
               ,|COMMON-LISP-USER|::|CONTROL-STRING|
               ,@|COMMON-LISP-USER|::|ARGS|)
              (|COMMON-LISP|::|FORMAT| ,|COMMON-LISP|::|STREAM|
               "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%"
               (|COMMON-LISP|::|>|
                (|COMMON-LISP|::|LENGTH| (|COMMON-LISP-USER|::|MP-MODELS|)) 1.)
               (|COMMON-LISP-USER|::|CURRENT-MODEL|)
               ,|COMMON-LISP-USER|::|CONTROL-STRING|
               ,@|COMMON-LISP-USER|::|ARGS|)
              |COMMON-LISP|::|NIL|)))))))))))
  '(|COMMON-LISP-USER|::|CONTROL-STRING| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|ONE-TIME-MODEL-WARNING|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|ONE-TIME-MODEL-WARNING|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|ONE-TIME-MODEL-WARNING|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|TAG|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|CONTROL-STRING| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|ARGS| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ONE-TIME-MODEL-WARNING|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|MODULE| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP-USER|::|PRESENT| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP|::|STREAM| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
          (,|COMMON-LISP-USER|::|MODULE| ,|COMMON-LISP-USER|::|PRESENT|)
          (|COMMON-LISP-USER|::|GET-MODULE-FCT|
           '|COMMON-LISP-USER|::|PRINTING-MODULE|)
          (|COMMON-LISP|::|WHEN|
           (|COMMON-LISP|::|AND| ,|COMMON-LISP-USER|::|PRESENT|
            (|COMMON-LISP-USER|::|ACT-R-OUTPUT-STREAM|
             (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
              ,|COMMON-LISP-USER|::|MODULE|)))
           (|COMMON-LISP|::|LET|
            ((,|COMMON-LISP|::|STREAM|
              (|COMMON-LISP-USER|::|ACT-R-OUTPUT-STREAM|
               (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
                ,|COMMON-LISP-USER|::|MODULE|))))
            (|COMMON-LISP|::|UNLESS|
             (|COMMON-LISP|::|FIND| ,|COMMON-LISP-USER|::|TAG|
              (|COMMON-LISP-USER|::|PRINTING-MODULE-ONE-TIME-TAGS|
               ,|COMMON-LISP-USER|::|MODULE|)
              :|TEST| '|COMMON-LISP|::|EQUAL|)
             (|COMMON-LISP|::|PUSH| ,|COMMON-LISP-USER|::|TAG|
              (|COMMON-LISP-USER|::|PRINTING-MODULE-ONE-TIME-TAGS|
               ,|COMMON-LISP-USER|::|MODULE|))
             (|COMMON-LISP|::|COND|
              ((|COMMON-LISP|::|NULL|
                (|COMMON-LISP-USER|::|PRINTING-MODULE-MODEL-WARNINGS|
                 ,|COMMON-LISP-USER|::|MODULE|))
               |COMMON-LISP|::|NIL|)
              ((|COMMON-LISP|::|OR|
                (|COMMON-LISP|::|NULL| ,|COMMON-LISP|::|STREAM|)
                (|COMMON-LISP|::|EQ| ,|COMMON-LISP|::|STREAM|
                 |COMMON-LISP|::|*ERROR-OUTPUT*|)
                |COMMON-LISP-USER|::|*ONE-STREAM-HACK*|
                (|COMMON-LISP|::|AND|
                 (|COMMON-LISP|::|EQ| ,|COMMON-LISP|::|STREAM|
                  |COMMON-LISP|::|T|)
                 (|COMMON-LISP|::|EQL| |COMMON-LISP|::|*ERROR-OUTPUT*|
                  |COMMON-LISP|::|*STANDARD-OUTPUT*|)))
               (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|*ERROR-OUTPUT*|
                "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%"
                (|COMMON-LISP|::|>|
                 (|COMMON-LISP|::|LENGTH| (|COMMON-LISP-USER|::|MP-MODELS|))
                 1.)
                (|COMMON-LISP-USER|::|CURRENT-MODEL|)
                ,|COMMON-LISP-USER|::|CONTROL-STRING|
                ,@|COMMON-LISP-USER|::|ARGS|))
              (|COMMON-LISP|::|T|
               (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|*ERROR-OUTPUT*|
                "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%"
                (|COMMON-LISP|::|>|
                 (|COMMON-LISP|::|LENGTH| (|COMMON-LISP-USER|::|MP-MODELS|))
                 1.)
                (|COMMON-LISP-USER|::|CURRENT-MODEL|)
                ,|COMMON-LISP-USER|::|CONTROL-STRING|
                ,@|COMMON-LISP-USER|::|ARGS|)
               (|COMMON-LISP|::|FORMAT| ,|COMMON-LISP|::|STREAM|
                "~&#|Warning~:[~*~; (in model ~a)~]: ~@? |#~%"
                (|COMMON-LISP|::|>|
                 (|COMMON-LISP|::|LENGTH| (|COMMON-LISP-USER|::|MP-MODELS|))
                 1.)
                (|COMMON-LISP-USER|::|CURRENT-MODEL|)
                ,|COMMON-LISP-USER|::|CONTROL-STRING|
                ,@|COMMON-LISP-USER|::|ARGS|)
               |COMMON-LISP|::|NIL|))))))))))))
  '(|COMMON-LISP-USER|::|TAG| |COMMON-LISP-USER|::|CONTROL-STRING|
    |COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|META-P-OUTPUT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|META-P-OUTPUT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|META-P-OUTPUT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CONTROL-STRING|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|META-P-OUTPUT|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|MODULE| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP-USER|::|PRESENT| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP|::|STREAM| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP-USER|::|MODEL| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP-USER|::|USED-STREAMS| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP-USER|::|M| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP-USER|::|PREVIOUS-MODEL| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|IF| (|COMMON-LISP-USER|::|CURRENT-MP|)
          (|COMMON-LISP-USER|::|CANNOT-DEFINE-MODEL|
           (|COMMON-LISP|::|LET|
            ((,|COMMON-LISP-USER|::|USED-STREAMS| |COMMON-LISP|::|NIL|)
             (,|COMMON-LISP-USER|::|PREVIOUS-MODEL|
              (|COMMON-LISP-USER|::|CURRENT-MODEL-STRUCT|)))
            (|COMMON-LISP|::|UNWIND-PROTECT|
             (|COMMON-LISP|::|DOLIST|
              (,|COMMON-LISP-USER|::|M|
               (|COMMON-LISP-USER|::|META-P-MODEL-ORDER|
                (|COMMON-LISP-USER|::|CURRENT-MP|)))
              (|COMMON-LISP|::|LET|
               ((,|COMMON-LISP-USER|::|MODEL|
                 (|COMMON-LISP|::|GETHASH| ,|COMMON-LISP-USER|::|M|
                  (|COMMON-LISP-USER|::|META-P-MODELS|
                   (|COMMON-LISP-USER|::|CURRENT-MP|)))))
               (|COMMON-LISP|::|SETF|
                (|COMMON-LISP-USER|::|META-P-CURRENT-MODEL|
                 (|COMMON-LISP-USER|::|CURRENT-MP|))
                ,|COMMON-LISP-USER|::|MODEL|)
               (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
                (,|COMMON-LISP-USER|::|MODULE| ,|COMMON-LISP-USER|::|PRESENT|)
                (|COMMON-LISP-USER|::|GET-MODULE-FCT|
                 '|COMMON-LISP-USER|::|PRINTING-MODULE|)
                (|COMMON-LISP|::|WHEN|
                 (|COMMON-LISP|::|AND| ,|COMMON-LISP-USER|::|PRESENT|
                  (|COMMON-LISP-USER|::|ACT-R-OUTPUT-STREAM|
                   (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
                    ,|COMMON-LISP-USER|::|MODULE|)))
                 (|COMMON-LISP|::|LET|
                  ((,|COMMON-LISP|::|STREAM|
                    (|COMMON-LISP-USER|::|ACT-R-OUTPUT-STREAM|
                     (|COMMON-LISP-USER|::|PRINTING-MODULE-V|
                      ,|COMMON-LISP-USER|::|MODULE|))))
                  (|COMMON-LISP|::|UNLESS|
                   (|COMMON-LISP|::|MEMBER| ,|COMMON-LISP|::|STREAM|
                    ,|COMMON-LISP-USER|::|USED-STREAMS|)
                   (|COMMON-LISP|::|PUSH| ,|COMMON-LISP|::|STREAM|
                    ,|COMMON-LISP-USER|::|USED-STREAMS|)
                   (|COMMON-LISP|::|FORMAT| ,|COMMON-LISP|::|STREAM| "~&~@?~%"
                    ,|COMMON-LISP-USER|::|CONTROL-STRING|
                    ,@|COMMON-LISP-USER|::|ARGS|)))))))
             (|COMMON-LISP|::|SETF|
              (|COMMON-LISP-USER|::|META-P-CURRENT-MODEL|
               (|COMMON-LISP-USER|::|CURRENT-MP|))
              ,|COMMON-LISP-USER|::|PREVIOUS-MODEL|)))
           |COMMON-LISP|::|NIL|)
          (|COMMON-LISP-USER|::|PRINT-WARNING|
           "No current meta-process in call to meta-p-output"))))))))
  '(|COMMON-LISP-USER|::|CONTROL-STRING| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|RAD->DEG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|R|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DEG->RAD|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|D|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PX|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PX|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PX|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "X coordinate of an XY vector."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VPT|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PX|
       `(|COMMON-LISP|::|SVREF| ,|COMMON-LISP-USER|::|VPT| 0.))))))
  '(|COMMON-LISP-USER|::|VPT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PY|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Y coordinate of an XY vector."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VPT|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PY|
       `(|COMMON-LISP|::|SVREF| ,|COMMON-LISP-USER|::|VPT| 1.))))))
  '(|COMMON-LISP-USER|::|VPT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PZ|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PZ|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PZ|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Z coordinate of an XYZ vector."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VPT|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PZ|
       `(|COMMON-LISP|::|SVREF| ,|COMMON-LISP-USER|::|VPT| 2.))))))
  '(|COMMON-LISP-USER|::|VPT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|VR|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|VR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|VR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "R component of an r-theta vector."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VRT|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|VR|
       `(|COMMON-LISP|::|SVREF| ,|COMMON-LISP-USER|::|VRT| 0.))))))
  '(|COMMON-LISP-USER|::|VRT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|VTHETA|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|VTHETA|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|VTHETA|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Theta component of an r-theta vector."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VRT|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|VTHETA|
       `(|COMMON-LISP|::|SVREF| ,|COMMON-LISP-USER|::|VRT| 1.))))))
  '(|COMMON-LISP-USER|::|VRT|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|VPT=|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VPT1| |COMMON-LISP-USER|::|VPT2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|ROUND-XY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|LOC|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|POLAR-MOVE-XY|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|POLAR-MOVE-XY|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|POLAR-MOVE-XY|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|LOC1| |COMMON-LISP-USER|::|LOC2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-MATCH-SLOTVAL|
 '#(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-MATCH-SLOTVAL|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-MATCH-SLOTVAL|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-MATCH-SLOTVAL|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-MIN-SLOTVAL|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-MIN-SLOTVAL|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-MAX-SLOTVAL|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-MAX-SLOTVAL|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-NEAREST-SLOTVAL|
 '#(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-NEAREST-SLOTVAL|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-MIN-VAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|LIST| |COMMON-LISP-USER|::|ACCESSOR|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|OBJS-MAX-VAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|LIST| |COMMON-LISP-USER|::|ACCESSOR|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MKSTR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|RANDOM-ITEM|
 '#(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|RANDOM-ITEM|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|RANDOM-ITEM|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|RANDOM-ITEM|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SYM->KEY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|SYMBOL|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FLATTEN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|LIS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|DOVECTOR|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|DOVECTOR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DOVECTOR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G7109| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G7110|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| #1# 2. 3. |COMMON-LISP|::|NIL|))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP-USER|::|DOVECTOR| #1#
          '#4=(|COMMON-LISP-USER|::|VARSYM| |COMMON-LISP-USER|::|VEC|
               |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP-USER|::|RET|))
         #1#))
       (|COMMON-LISP-USER|::|VARSYM| (|COMMON-LISP|::|CAR| #3#))
       (|COMMON-LISP-USER|::|VEC| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|COMMON-LISP-USER|::|RET| (|COMMON-LISP|::|CADDR| . #5#))
       (|COMMON-LISP-USER|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DOVECTOR|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|IDX| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|LET|
          ((,|COMMON-LISP-USER|::|VARSYM| |COMMON-LISP|::|NIL|))
          (|COMMON-LISP|::|DOTIMES|
           (,|COMMON-LISP-USER|::|IDX|
            (|COMMON-LISP|::|LENGTH| ,|COMMON-LISP-USER|::|VEC|)
            ,|COMMON-LISP-USER|::|RET|)
           (|COMMON-LISP|::|SETQ| ,|COMMON-LISP-USER|::|VARSYM|
            (|COMMON-LISP|::|AREF| ,|COMMON-LISP-USER|::|VEC|
             ,|COMMON-LISP-USER|::|IDX|))
           ,@|COMMON-LISP-USER|::|BODY|))))))))
  '(#4# |COMMON-LISP|::|&BODY| |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|WITHIN|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|WITHIN|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|GREATER-THAN|
 '#(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|GREATER-THAN|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|LESS-THAN|
 '#(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|LESS-THAN|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|NOT-EQUAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|NEQ|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|STRING-TO-LINES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|S|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FIND-FLOAT-TIME-LIMIT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|SIZE| |COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP-USER|::|DIGITS| 3.))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*TIME-SIZE-TEST-LIST*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*TIME-SIZE-CURRENT-TYPE*|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SAFE-SECONDS->MS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|SECONDS| |COMMON-LISP|::|&OPTIONAL|
    |COMMON-LISP-USER|::|FNAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CIRCULAR-REFERENCES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|DEPENDENCIES|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-SPEC-VARIABLE-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-SPEC-SLOT-VALUE| |COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP|::|CHAR| #\=))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|REPLACE-VARIABLES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|ARG| |COMMON-LISP-USER|::|BINDINGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PRINT-TIME-IN-SECONDS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP|::|TIME| |COMMON-LISP-USER|::|COLON-P|
    |COMMON-LISP-USER|::|ATSIGN-P| |COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP-USER|::|WIDTH| 0.) |COMMON-LISP-USER|::|PADCHAR|
    |COMMON-LISP-USER|::|COMMACHAR|)))
