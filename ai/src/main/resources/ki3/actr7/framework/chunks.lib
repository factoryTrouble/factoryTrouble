#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|T|)
    (|COMMON-LISP|::|VALUES| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
   |COMMON-LISP-USER|::|GET-MODULE-FCT|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|T|)
    |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|SGP-FCT|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|NIL| |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|CURRENT-MODEL|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|NIL| |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|USE-SHORT-COPY-NAMES|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|VALUES| |COMMON-LISP|::|T| |COMMON-LISP|::|T|
     |COMMON-LISP|::|T|))
   |COMMON-LISP-USER|::|NEW-NAME-FCT|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|NIL| |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|UPDATE-CHUNKS-ON-THE-FLY|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|T|) |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|RELEASE-NAME-FCT|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|NIL| |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|NOTIFY-ON-THE-FLY-HOOKS|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-COUNT*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*CHUNK-PARAMETER-UNDEFINED*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-LIST*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL|
   |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-COPY-LIST*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL|
   |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-MERGE-LIST*|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-PARAMETER-DEFAULT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|PARAM| |COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP-USER|::|*PPRINT-CHUNK-STRING*|
 '(|COMMON-LISP|::|FORMATTER| "~S~:[ (~s)~;~*~]~%~@[~S~%~]~:{   ~s  ~s~%~}"))
(|SYSTEM|::|C-PROCLAIM-CONSTANT|
 '|COMMON-LISP-USER|::|*PPRINT-CHUNK-PARAMETERS-STRING*|
 '(|COMMON-LISP|::|FORMATTER|
   "~@[  --chunk parameters--~%~:{   ~s  ~s~%~}~]~%"))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PPRINT-A-CHUNK|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP-USER|::|W-PARAMS| |COMMON-LISP|::|T|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PPRINT-CHUNKS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PPRINT-CHUNKS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PPRINT-CHUNKS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Print the chunks"
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|CHUNK-NAMES|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PPRINT-CHUNKS|
      `(|COMMON-LISP-USER|::|PPRINT-CHUNKS-FCT|
        ',|COMMON-LISP-USER|::|CHUNK-NAMES|)))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|CHUNK-NAMES|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PPRINT-CHUNKS-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| |COMMON-LISP-USER|::|CHUNK-NAMES-LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-BACK-LINKS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SET-CHUNK-BACK-LINKS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP-USER|::|VAL|)))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|REMPROP| '|COMMON-LISP-USER|::|CHUNK-BACK-LINKS|
  '|SYSTEM|::|DEFSTRUCT-WRITER|)
 (|SYSTEM|::|CHECK-REDEFINITION| '|COMMON-LISP-USER|::|CHUNK-BACK-LINKS|
  '|COMMON-LISP|::|DEFSETF|
  (|COMMON-LISP|::|AND|
   (|COMMON-LISP|::|GET| '|COMMON-LISP-USER|::|CHUNK-BACK-LINKS|
    '|SYSTEM|::|SETF-EXPANDER|)
   (|SYSTEM|::|TEXT| "SETF expander")))
 (|SYSTEM|::|%PUT| '|COMMON-LISP-USER|::|CHUNK-BACK-LINKS|
  '|SYSTEM|::|SETF-EXPANDER| '|COMMON-LISP-USER|::|SET-CHUNK-BACK-LINKS|)
 (|SYSTEM|::|%SET-DOCUMENTATION| '|COMMON-LISP-USER|::|CHUNK-BACK-LINKS|
  '|COMMON-LISP|::|SETF| |COMMON-LISP|::|NIL|)
 '|COMMON-LISP-USER|::|CHUNK-BACK-LINKS|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PPRINT-CHUNKS-PLUS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PPRINT-CHUNKS-PLUS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PPRINT-CHUNKS-PLUS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Print the chunks and their chunk parameters"
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|CHUNK-NAMES|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PPRINT-CHUNKS-PLUS|
      `(|COMMON-LISP-USER|::|PPRINT-CHUNKS-PLUS-FCT|
        ',|COMMON-LISP-USER|::|CHUNK-NAMES|)))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|CHUNK-NAMES|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PPRINT-CHUNKS-PLUS-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| |COMMON-LISP-USER|::|CHUNK-NAMES-LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNKS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|GET-CHUNK|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|GET-CHUNK-WARN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CHUNK-P|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-P|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-P|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Check a name to see if it names a chunk"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME?|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-P|
       `(|COMMON-LISP-USER|::|CHUNK-P-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME?|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME?|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-P-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-NAME?|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-SLOTS-VECTOR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CHUNK-DOCUMENTATION|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-DOCUMENTATION|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-DOCUMENTATION|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Return the documentation string for a chunk"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-DOCUMENTATION|
       `(|COMMON-LISP-USER|::|CHUNK-DOCUMENTATION-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-DOCUMENTATION-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CREATE-UNDEFINED-CHUNK|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|COPY-CHUNK|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|COPY-CHUNK|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|COPY-CHUNK|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Create a new chunk which is a copy of the given chunk"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|COPY-CHUNK|
       `(|COMMON-LISP-USER|::|COPY-CHUNK-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|COPY-CHUNK-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CHUNK-COPIED-FROM|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-COPIED-FROM|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-COPIED-FROM|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Return the name of the chunk from which the provided chunk was copied"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-COPIED-FROM|
       `(|COMMON-LISP-USER|::|CHUNK-COPIED-FROM-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-COPIED-FROM-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|DEFINE-CHUNKS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|DEFINE-CHUNKS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DEFINE-CHUNKS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Create chunks in the current model"
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|CHUNK-DEFS|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DEFINE-CHUNKS|
      `(|COMMON-LISP-USER|::|DEFINE-CHUNKS-FCT|
        ',|COMMON-LISP-USER|::|CHUNK-DEFS|)))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|CHUNK-DEFS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CREATE-SLOT-VALUE-CHUNK-IF-NEEDED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|VALUE|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CONVERT-SLOT-VALUE-TO-TRUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK| |COMMON-LISP-USER|::|SLOT-NAME|
    |COMMON-LISP-USER|::|VALUE|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DEFINE-CHUNKS-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-DEF-LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHK-SLOT-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK| |COMMON-LISP-USER|::|SLOT-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CHUNK-SLOT-VALUE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-SLOT-VALUE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-SLOT-VALUE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Return the value of a slot for the named chunk"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|SLOT-NAME| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-SLOT-VALUE|
       `(|COMMON-LISP-USER|::|CHUNK-SLOT-VALUE-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME|
         ',|COMMON-LISP-USER|::|SLOT-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP-USER|::|SLOT-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-SLOT-VALUE-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP-USER|::|SLOT-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|CHUNK-FILLED-SLOTS-LIST|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-FILLED-SLOTS-LIST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-FILLED-SLOTS-LIST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Return a sorted list of slots that exist in the named chunk"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|SORTED| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-FILLED-SLOTS-LIST|
       `(|COMMON-LISP-USER|::|CHUNK-FILLED-SLOTS-LIST-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME| ,|COMMON-LISP-USER|::|SORTED|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP|::|&OPTIONAL|
    |COMMON-LISP-USER|::|SORTED|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-FILLED-SLOTS-LIST-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP|::|&OPTIONAL|
    |COMMON-LISP-USER|::|SORTED|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|SET-CHUNK-SLOT-VALUE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|SET-CHUNK-SLOT-VALUE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|SET-CHUNK-SLOT-VALUE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Set the value of a chunk's slot"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|SLOT-NAME| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|VALUE| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|SET-CHUNK-SLOT-VALUE|
       `(|COMMON-LISP-USER|::|SET-CHUNK-SLOT-VALUE-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME| ',|COMMON-LISP-USER|::|SLOT-NAME|
         ',|COMMON-LISP-USER|::|VALUE|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP-USER|::|SLOT-NAME|
    |COMMON-LISP-USER|::|VALUE|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SET-CHUNK-SLOT-VALUE-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP-USER|::|SLOT-NAME|
    |COMMON-LISP-USER|::|VALUE|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-CHUNK-IMMUTABLE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SET-CHK-SLOT-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|C| |COMMON-LISP-USER|::|SLOT-NAME|
    |COMMON-LISP-USER|::|VALUE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|MOD-CHUNK|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MOD-CHUNK|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MOD-CHUNK|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Modify the slot values of a chunk"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|MODIFICATIONS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MOD-CHUNK|
       `(|COMMON-LISP-USER|::|MOD-CHUNK-FCT| ',|COMMON-LISP-USER|::|CHUNK-NAME|
         ',|COMMON-LISP-USER|::|MODIFICATIONS|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|MODIFICATIONS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MOD-CHUNK-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME|
    |COMMON-LISP-USER|::|MODIFICATIONS-LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FAST-CHUNK-SLOT-VALUE-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP-USER|::|SLOT-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FAST-SET-CHUNK-SLOT-VALUE-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP-USER|::|SLOT-NAME|
    |COMMON-LISP-USER|::|VALUE|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FAST-MOD-CHUNK-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME|
    |COMMON-LISP-USER|::|MODIFICATIONS-LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MOD-CHUNK-WITH-SPEC-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME| |COMMON-LISP-USER|::|MOD-SPEC|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|DELETE-CHUNK|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|DELETE-CHUNK|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DELETE-CHUNK|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Delete a chunk from a model"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DELETE-CHUNK|
       `(|COMMON-LISP-USER|::|DELETE-CHUNK-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DELETE-CHUNK-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PURGE-CHUNK|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PURGE-CHUNK|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PURGE-CHUNK|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "delete a chunk and release its name"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PURGE-CHUNK|
       `(|COMMON-LISP-USER|::|PURGE-CHUNK-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PURGE-CHUNK-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|MERGE-CHUNKS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MERGE-CHUNKS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MERGE-CHUNKS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Merge two chunks into a single representation"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|CHUNK-NAME2| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MERGE-CHUNKS|
       `(|COMMON-LISP-USER|::|MERGE-CHUNKS-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME1|
         ',|COMMON-LISP-USER|::|CHUNK-NAME2|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME1| |COMMON-LISP-USER|::|CHUNK-NAME2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MERGE-CHUNKS-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME1| |COMMON-LISP-USER|::|CHUNK-NAME2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CREATE-CHUNK-ALIAS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CREATE-CHUNK-ALIAS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CREATE-CHUNK-ALIAS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ALIAS| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CREATE-CHUNK-ALIAS|
       `(|COMMON-LISP-USER|::|CREATE-CHUNK-ALIAS-FCT|
         ',|COMMON-LISP-USER|::|CHUNK| ',|COMMON-LISP-USER|::|ALIAS|))))))
  '(|COMMON-LISP-USER|::|CHUNK| |COMMON-LISP-USER|::|ALIAS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CREATE-CHUNK-ALIAS-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK| |COMMON-LISP-USER|::|ALIAS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|EQ-CHUNKS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|EQ-CHUNKS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|EQ-CHUNKS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Return t if two chunks have the same underlying representation"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|CHUNK-NAME2| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|EQ-CHUNKS|
       `(|COMMON-LISP-USER|::|EQ-CHUNKS-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME1|
         ',|COMMON-LISP-USER|::|CHUNK-NAME2|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME1| |COMMON-LISP-USER|::|CHUNK-NAME2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EQ-CHUNKS-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME1| |COMMON-LISP-USER|::|CHUNK-NAME2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|TRUE-CHUNK-NAME|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|TRUE-CHUNK-NAME|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|TRUE-CHUNK-NAME|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Return the prototypical name of a chunk in the event of merging"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|TRUE-CHUNK-NAME|
       `(|COMMON-LISP-USER|::|TRUE-CHUNK-NAME-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|TRUE-CHUNK-NAME-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|EQUAL-CHUNKS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|EQUAL-CHUNKS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|EQUAL-CHUNKS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Return t if two chunks are of the same chunk-type and have equal slot values"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-NAME1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|CHUNK-NAME2| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|EQUAL-CHUNKS|
       `(|COMMON-LISP-USER|::|EQUAL-CHUNKS-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-NAME1|
         ',|COMMON-LISP-USER|::|CHUNK-NAME2|))))))
  '(|COMMON-LISP-USER|::|CHUNK-NAME1| |COMMON-LISP-USER|::|CHUNK-NAME2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EQUAL-CHUNKS-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-NAME1| |COMMON-LISP-USER|::|CHUNK-NAME2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-EQUAL-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|C1| |COMMON-LISP-USER|::|C2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-SLOT-EQUAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|VAL1| |COMMON-LISP-USER|::|VAL2|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL|
   |COMMON-LISP-USER|::|*SUPPRESS-EXTEND-ITEM-WARNING*|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SUPPRESS-EXTENSION-WARNINGS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|UNSUPPRESS-EXTENSION-WARNINGS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|EXTEND-CHUNKS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|EXTEND-CHUNKS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|EXTEND-CHUNKS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Add new parameters to all chunks"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|PARAMETER-NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (#2=#:|G14106| (|COMMON-LISP|::|CDDR| . #1#))
       (|COMMON-LISP-USER|::|DEFAULT-VALUE|
        (|COMMON-LISP|::|LET|
         ((#3=#:|KWD-ARG-14107|
           (|COMMON-LISP|::|GETF| #2# ':|DEFAULT-VALUE|
            '#4=(|COMMON-LISP|::|NIL|))))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #3# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|NIL|) #3#)))
       (|COMMON-LISP-USER|::|DEFAULT-FUNCTION|
        (|COMMON-LISP|::|LET|
         ((#5=#:|KWD-ARG-14108|
           (|COMMON-LISP|::|GETF| #2# ':|DEFAULT-FUNCTION| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #5# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|NIL|) #5#)))
       (|COMMON-LISP-USER|::|MERGE-FUNCTION|
        (|COMMON-LISP|::|LET|
         ((#6=#:|KWD-ARG-14109|
           (|COMMON-LISP|::|GETF| #2# ':|MERGE-FUNCTION| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #6# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|NIL|) #6#)))
       (|COMMON-LISP-USER|::|COPY-FUNCTION|
        (|COMMON-LISP|::|LET|
         ((#7=#:|KWD-ARG-14110|
           (|COMMON-LISP|::|GETF| #2# ':|COPY-FUNCTION| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #7# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|NIL|) #7#)))
       (|COMMON-LISP-USER|::|COPY-FROM-CHUNK-FUNCTION|
        (|COMMON-LISP|::|LET|
         ((#8=#:|KWD-ARG-14111|
           (|COMMON-LISP|::|GETF| #2# ':|COPY-FROM-CHUNK-FUNCTION| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #8# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|NIL|) #8#))))
      (|SYSTEM|::|KEYWORD-TEST| #2#
       '(:|COPY-FROM-CHUNK-FUNCTION| :|COPY-FUNCTION| :|MERGE-FUNCTION|
         :|DEFAULT-FUNCTION| :|DEFAULT-VALUE|))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|EXTEND-CHUNKS|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|OR|
         (|COMMON-LISP|::|NOT|
          (|COMMON-LISP|::|SYMBOLP| |COMMON-LISP-USER|::|PARAMETER-NAME|))
         (|COMMON-LISP|::|KEYWORDP| |COMMON-LISP-USER|::|PARAMETER-NAME|))
        (|COMMON-LISP-USER|::|PRINT-WARNING|
         "~s is not a valid symbol for specifying a chunk parameter."
         |COMMON-LISP-USER|::|PARAMETER-NAME|)
        (|COMMON-LISP|::|LET|
         ((|COMMON-LISP-USER|::|ACCESSOR-NAME|
           (|COMMON-LISP|::|INTERN|
            (|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING| "CHUNK-"
             (|COMMON-LISP|::|STRING-UPCASE|
              |COMMON-LISP-USER|::|PARAMETER-NAME|))))
          (|COMMON-LISP-USER|::|SETF-NAME|
           (|COMMON-LISP|::|INTERN|
            (|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING| "CHUNK-"
             (|COMMON-LISP|::|STRING-UPCASE|
              |COMMON-LISP-USER|::|PARAMETER-NAME|)
             "-SETF")))
          (|COMMON-LISP-USER|::|INDEX| (|COMMON-LISP|::|GENSYM|))
          (|COMMON-LISP-USER|::|EXISTS| (|COMMON-LISP|::|GENSYM|))
          (|COMMON-LISP-USER|::|PARAM| (|COMMON-LISP|::|GENSYM|)))
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|FIND| |COMMON-LISP-USER|::|PARAMETER-NAME|
           |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-LIST*| :|KEY|
           #'|COMMON-LISP-USER|::|ACT-R-CHUNK-PARAMETER-NAME|)
          (|COMMON-LISP|::|PROGN|
           (|COMMON-LISP-USER|::|PRINT-WARNING|
            "Parameter ~s already defined for chunks."
            |COMMON-LISP-USER|::|PARAMETER-NAME|)
           :|DUPLICATE-PARAMETER|)
          (|COMMON-LISP|::|PROGN|
           (|COMMON-LISP|::|IF| |COMMON-LISP|::|NIL|
            (|COMMON-LISP-USER|::|PRINT-WARNING|
             "~{Invalid value ~s specified for the ~s function to extend chunks~^~%~}"
             (|COMMON-LISP|::|MAPCAN|
              (|COMMON-LISP|::|LAMBDA|
               (|COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|)
               (|COMMON-LISP|::|UNLESS|
                (|COMMON-LISP-USER|::|FCTORNIL| |COMMON-LISP-USER|::|X|)
                (|COMMON-LISP|::|LIST| |COMMON-LISP-USER|::|X|
                 |COMMON-LISP-USER|::|Y|)))
              (|COMMON-LISP|::|LIST| |COMMON-LISP-USER|::|DEFAULT-FUNCTION|
               |COMMON-LISP-USER|::|MERGE-FUNCTION|
               |COMMON-LISP-USER|::|COPY-FUNCTION|
               |COMMON-LISP-USER|::|COPY-FROM-CHUNK-FUNCTION|)
              (|COMMON-LISP|::|LIST| :|DEFAULT-FUNCTION| :|MERGE-FUNCTION|
               :|COPY-FUNCTION| :|COPY-FROM-CHUNK-FUNCTION|)))
            `(|COMMON-LISP|::|EVAL-WHEN|
              (:|COMPILE-TOPLEVEL| :|LOAD-TOPLEVEL| :|EXECUTE|)
              (|COMMON-LISP|::|UNLESS|
               |COMMON-LISP-USER|::|*SUPPRESS-EXTEND-ITEM-WARNING*|
               (|COMMON-LISP|::|WHEN|
                (|COMMON-LISP|::|FBOUNDP|
                 ',|COMMON-LISP-USER|::|ACCESSOR-NAME|)
                (|COMMON-LISP-USER|::|PRINT-WARNING|
                 "Function ~s already exists and is being redefined."
                 ',|COMMON-LISP-USER|::|ACCESSOR-NAME|))
               (|COMMON-LISP|::|WHEN|
                (|COMMON-LISP|::|FBOUNDP| ',|COMMON-LISP-USER|::|SETF-NAME|)
                (|COMMON-LISP-USER|::|PRINT-WARNING|
                 "Function ~s already exists and is being redefined."
                 ',|COMMON-LISP-USER|::|SETF-NAME|)))
              (|COMMON-LISP|::|LET*|
               ((,|COMMON-LISP-USER|::|INDEX|
                 |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-COUNT*|)
                (,|COMMON-LISP-USER|::|EXISTS|
                 (|COMMON-LISP|::|FIND| ',|COMMON-LISP-USER|::|PARAMETER-NAME|
                  |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-LIST*| :|KEY|
                  #'|COMMON-LISP-USER|::|ACT-R-CHUNK-PARAMETER-NAME|))
                (,|COMMON-LISP-USER|::|PARAM|
                 (|COMMON-LISP-USER|::|MAKE-ACT-R-CHUNK-PARAMETER| :|NAME|
                  ',|COMMON-LISP-USER|::|PARAMETER-NAME| :|INDEX|
                  ,|COMMON-LISP-USER|::|INDEX| :|DEFAULT-VALUE|
                  ',|COMMON-LISP-USER|::|DEFAULT-VALUE| :|DEFAULT-FUNCTION|
                  ',|COMMON-LISP-USER|::|DEFAULT-FUNCTION| :|MERGE|
                  ',|COMMON-LISP-USER|::|MERGE-FUNCTION| :|COPY|
                  ',|COMMON-LISP-USER|::|COPY-FUNCTION| :|COPY-FROM-CHUNK|
                  ',|COMMON-LISP-USER|::|COPY-FROM-CHUNK-FUNCTION| :|ACCESSOR|
                  ',|COMMON-LISP-USER|::|ACCESSOR-NAME|)))
               (|COMMON-LISP|::|IF| ,|COMMON-LISP-USER|::|EXISTS|
                (|COMMON-LISP|::|PROGN|
                 (|COMMON-LISP|::|SETF| ,|COMMON-LISP-USER|::|INDEX|
                  (|COMMON-LISP-USER|::|ACT-R-CHUNK-PARAMETER-INDEX|
                   ,|COMMON-LISP-USER|::|EXISTS|))
                 (|COMMON-LISP|::|SETF|
                  |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-LIST*|
                  (|COMMON-LISP|::|REMOVE| ,|COMMON-LISP-USER|::|EXISTS|
                   |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-LIST*|))
                 (|COMMON-LISP|::|SETF|
                  |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-COPY-LIST*|
                  (|COMMON-LISP|::|REMOVE| ,|COMMON-LISP-USER|::|EXISTS|
                   |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-COPY-LIST*|))
                 (|COMMON-LISP|::|SETF|
                  |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-MERGE-LIST*|
                  (|COMMON-LISP|::|REMOVE| ,|COMMON-LISP-USER|::|EXISTS|
                   |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-MERGE-LIST*|))
                 (|COMMON-LISP|::|SETF|
                  (|COMMON-LISP-USER|::|ACT-R-CHUNK-PARAMETER-INDEX|
                   ,|COMMON-LISP-USER|::|PARAM|)
                  (|COMMON-LISP-USER|::|ACT-R-CHUNK-PARAMETER-INDEX|
                   ,|COMMON-LISP-USER|::|EXISTS|)))
                (|COMMON-LISP|::|INCF|
                 |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-COUNT*|))
               (|COMMON-LISP|::|PUSH| ,|COMMON-LISP-USER|::|PARAM|
                |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-LIST*|)
               (|COMMON-LISP|::|IF| ',|COMMON-LISP-USER|::|COPY-FUNCTION|
                (|COMMON-LISP|::|PUSH| ,|COMMON-LISP-USER|::|PARAM|
                 |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-COPY-LIST*|)
                (|COMMON-LISP|::|WHEN|
                 ',|COMMON-LISP-USER|::|COPY-FROM-CHUNK-FUNCTION|
                 (|COMMON-LISP|::|PUSH| ,|COMMON-LISP-USER|::|PARAM|
                  |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-COPY-LIST*|)))
               (|COMMON-LISP|::|WHEN| ',|COMMON-LISP-USER|::|MERGE-FUNCTION|
                (|COMMON-LISP|::|PUSH| ,|COMMON-LISP-USER|::|PARAM|
                 |COMMON-LISP-USER|::|*CHUNK-PARAMETERS-MERGE-LIST*|))
               (|COMMON-LISP|::|DEFUN| ,|COMMON-LISP-USER|::|ACCESSOR-NAME|
                (|COMMON-LISP-USER|::|CHUNK-NAME|)
                (|COMMON-LISP|::|LET|
                 ((|COMMON-LISP-USER|::|C|
                   (|COMMON-LISP-USER|::|GET-CHUNK|
                    |COMMON-LISP-USER|::|CHUNK-NAME|)))
                 (|COMMON-LISP|::|IF| |COMMON-LISP-USER|::|C|
                  (|COMMON-LISP|::|LET|
                   ((|COMMON-LISP-USER|::|V|
                     (|COMMON-LISP|::|AREF|
                      (|COMMON-LISP-USER|::|ACT-R-CHUNK-PARAMETER-VALUES|
                       |COMMON-LISP-USER|::|C|)
                      ,|COMMON-LISP-USER|::|INDEX|)))
                   (|COMMON-LISP|::|IF|
                    (|COMMON-LISP|::|EQ| |COMMON-LISP-USER|::|V|
                     |COMMON-LISP-USER|::|*CHUNK-PARAMETER-UNDEFINED*|)
                    (|COMMON-LISP|::|SETF|
                     (|COMMON-LISP|::|AREF|
                      (|COMMON-LISP-USER|::|ACT-R-CHUNK-PARAMETER-VALUES|
                       |COMMON-LISP-USER|::|C|)
                      ,|COMMON-LISP-USER|::|INDEX|)
                     (|COMMON-LISP-USER|::|CHUNK-PARAMETER-DEFAULT|
                      ,|COMMON-LISP-USER|::|PARAM|
                      |COMMON-LISP-USER|::|CHUNK-NAME|))
                    |COMMON-LISP-USER|::|V|))
                  (|COMMON-LISP-USER|::|PRINT-WARNING|
                   "Chunk ~s does not exist in attempt to access ~a."
                   |COMMON-LISP-USER|::|CHUNK-NAME|
                   ',|COMMON-LISP-USER|::|ACCESSOR-NAME|))))
               (|COMMON-LISP|::|DEFUN| ,|COMMON-LISP-USER|::|SETF-NAME|
                (|COMMON-LISP-USER|::|CHUNK-NAME|
                 |COMMON-LISP-USER|::|NEW-VALUE|)
                (|COMMON-LISP|::|LET|
                 ((|COMMON-LISP-USER|::|C|
                   (|COMMON-LISP-USER|::|GET-CHUNK|
                    |COMMON-LISP-USER|::|CHUNK-NAME|)))
                 (|COMMON-LISP|::|IF| |COMMON-LISP-USER|::|C|
                  (|COMMON-LISP|::|SETF|
                   (|COMMON-LISP|::|AREF|
                    (|COMMON-LISP-USER|::|ACT-R-CHUNK-PARAMETER-VALUES|
                     |COMMON-LISP-USER|::|C|)
                    ,|COMMON-LISP-USER|::|INDEX|)
                   |COMMON-LISP-USER|::|NEW-VALUE|)
                  (|COMMON-LISP-USER|::|PRINT-WARNING|
                   "Chunk ~s does not exist in attempt to set ~a."
                   |COMMON-LISP-USER|::|CHUNK-NAME|
                   ',|COMMON-LISP-USER|::|ACCESSOR-NAME|))))
               (|COMMON-LISP|::|DEFSETF| ,|COMMON-LISP-USER|::|ACCESSOR-NAME|
                ,|COMMON-LISP-USER|::|SETF-NAME|)
               ',|COMMON-LISP-USER|::|ACCESSOR-NAME|))))))))))))
  '(|COMMON-LISP-USER|::|PARAMETER-NAME| |COMMON-LISP|::|&KEY|
    (|COMMON-LISP-USER|::|DEFAULT-VALUE| |COMMON-LISP|::|NIL|)
    (|COMMON-LISP-USER|::|DEFAULT-FUNCTION| |COMMON-LISP|::|NIL|)
    (|COMMON-LISP-USER|::|MERGE-FUNCTION| |COMMON-LISP|::|NIL|)
    (|COMMON-LISP-USER|::|COPY-FUNCTION| |COMMON-LISP|::|NIL|)
    (|COMMON-LISP-USER|::|COPY-FROM-CHUNK-FUNCTION| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|NORMALIZE-CHUNK-NAMES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP-USER|::|UNINTERN?| |COMMON-LISP|::|NIL|))))
